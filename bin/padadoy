#!/usr/bin/perl
use strict;
use warnings;
#ABSTRACT: Command line client to simply deploy PSGI applications
#PODNAME: padadoy

use 5.010;
use App::Padadoy;
use Getopt::Long;
use Path::Class qw(file dir);
use File::HomeDir;
use Pod::Usage;
use YAML::Any qw(LoadFile);

my ($help,$version,$config,$quiet);
GetOptions(
    'help|?'   => \$help,
    'version'  => \$version,
    'config:s' => \$config,
    'quiet'    => \$quiet,
) or pod2usage(2);
pod2usage(1) if $help;

$ARGV[0] = 'version' if $version;

pod2usage('Please specify a command!') unless @ARGV; 

my $cmd = shift @ARGV;
pod2usage(1) if $cmd eq 'help';

# TODO: There should be a CPAN module to do this:
sub find_config_file {
    my $filename = shift;;
    my $path = dir('.')->absolute;
    while ($path) {
        my $file = file($path,$filename);
        return $file if -e $file;
        last if $path eq $path->parent; # stop at root
        $path = $path->parent;
    }
    my $file = file(File::HomeDir->my_home,$filename);
    return -e $file ? $file : undef;
}

$config //= find_config_file('padadoy.yml');

# Parse config file and values
my $values = defined $config ? LoadFile( $config ) : { };
my $regexp = qr{^([a-z]+)=(.*)$};
foreach (@ARGV) {
    next unless $_ =~ $regexp;
    $values->{$1} = $2;
}

foreach my $key (keys %$values) {
    pod2usage("Unknown config value $_") unless 
        grep { $key eq $_ } @App::Padadoy::configs;
}

my $padadoy = App::Padadoy->new($config,%$values);
$padadoy->{quiet} = 1 if $quiet;

pod2usage("Unknown command '$cmd'!")
    unless grep { $_ eq $cmd } @App::Padadoy::commands;

$padadoy->$cmd( grep { $_ !~ $regexp } @ARGV );


=head1 SYNOPSIS

 padadoy [options] <command> [config=value]

   Commands:
     start           start the application
     stop            stop the application
     restart         start or gracefully restart the application if running
     config          show configuration values
     status          show some status information
     create          create a boilerplate application
     deplist         list applications package dependencies
     checkout [R]    check out the application to a new directory (R=revision)
     cartontest      update dependencies (with carton) and run tests
     version         show version number of padadoy and exit
     logs            consult logfiles
     remote CMD      run padadoy with some command on the remote machine

     init            initialize environment on deployment machine
     update          check out a new revision and test it
     enable          enable prepared application and (re)start

   Options:
     -c|--config F   specify some configuration file F. By default padadoy.yml
                     is looked for in ./, ../, ../../ etc. and in ~/.
                     ./padadoy.yml and then ~/padadoy.yml is used.
     -q|--quiet      suppress status messages
     -h|--help       show this help message and exit
     -v|--version    show version number of padadoy and exit

   Configuration:
     Configuration values are read from padadoy.yml. In addition you can
     set config values as key=value pairs on the command line. See the
     command `config` for a list of config values.

=cut
